<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"
	default-autowire="byName">

	<!-- 开启controller注解支持 -->
	<!-- 注：如果base-package=cn.javass 则注解事务不起作用 TODO 读源码 
	<context:component-scan base-package="com.epic.ppr.company.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="com.epic.core.security.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>-->
	<context:component-scan base-package="com.epic" use-default-filters="false">
		<context:include-filter type="regex" expression="com.epic.*.controller"/>
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- <mvc:annotation-driven/> -->
	<!-- 会自动注册了validator ConversionService -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversion-service" />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />

	<mvc:view-controller path="/" view-name="forward:/index" />
	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />

	<!-- ========================= VIEW定义 ========================= -->
	<!-- bean name view resolver -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0" />

	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="3">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- json view -->
	<bean id="defaultJsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

	<!-- 文件上传相关 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--one of the properties available;the maximum file size in bytes -->
		<property name="maxUploadSize" value="100000" />
	</bean>

	<!-- 控制器异常处理 -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> 
		<property name="exceptionMappings"> <props> <prop key="java.lang.Exception"> 
		error_all </prop> </props> </property> </bean> -->
	<!-- 自定义异常处理 -->
	<bean id="exceptionResolver" class="com.epic.core.CommonExceptionHandler" />

	<!-- 启动JSON格式的配置 -->
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable 
			representation -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
</beans>
